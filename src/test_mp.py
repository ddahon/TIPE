import matplotlib.pyplot as plt
plt.rcParams.update({'font.size': 20})
###Influence et temps en fonction de k pour DegreeDiscount
#DegreeDiscount sur HepPh, p = 0.01, iterations = 20000, k de 1 à 46
k1 = [1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46]
influences1 = [420, 442, 455, 462, 467, 472, 476, 481, 484, 488, 492, 494, 498, 502, 505, 509, 512, 514, 518, 521, 523, 526, 529, 532]
temps1 = [0.03741288185119629, 0.03955483436584473, 0.04516291618347168, 0.04876589775085449, 0.07937216758728027, 0.055667877197265625, 0.05630993843078613, 0.0577092170715332, 0.0593869686126709, 0.05682492256164551, 0.05741620063781738, 0.058921098709106445, 0.060561180114746094, 0.06161904335021973, 0.06213998794555664, 0.06495189666748047, 0.06368684768676758, 0.06567192077636719, 0.06583786010742188, 0.06625795364379883, 0.06799197196960449, 0.06863093376159668, 0.07221603393554688, 0.07291293144226074]

#DegreeDiscount sur HepPh, p = 0.01, iterations = 10000, k de 100 à 2100
k2 = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100]
influences2 = [606, 727, 841, 951, 1060, 1168, 1274, 1380, 1484, 1587, 1691, 1793, 1897, 2000, 2102, 2223, 2335, 2442, 2544, 2648, 2752]

plt.plot(k1+k2, influences1+influences2)
plt.show()
##Influence en fonction de iterations
#Evaluation de l'influence sur HepPh, p = 0.01, k = 100, pour differents iterations
iterations = [50, 100, 200, 300, 400, 500] + [1000*k for k in range(1, 31)]
influences = [475, 477, 471, 472, 473, 475, 473, 475, 474, 475, 474, 474, 473, 473, 474, 474, 474, 474, 474, 474, 474, 474, 474, 473, 474, 474, 474, 474, 474, 474, 474, 474, 474, 474, 474, 474]
plt.plot(iterations , influences)
plt.show()

##
#CELF sur NetHEPT, p = 0.01, k de 1 à 46, :
influences = [4, 6, 8, 10, 12, 14, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]
temps = 6882.288732767105

##
#CELF sur Simmons, p = 0.01, k de 1 à 46
influences = [9, 16, 23, 31, 36, 41, 45, 49, 53, 57, 61, 66, 70, 74, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 118, 121, 123
, 125, 127, 129, 131, 133, 135, 137, 140, 142, 144, 146, 148, 150, 152, 155, 157, 159, 160, 161]
k = [i for i in range(1, 51)]
temps = 845
plt.plot(k, influences)
plt.show()
##
#CELF sur Simmons, p = 0.01, k de 1 à 200, IC
influences_CELF_IC = [9, 16, 23, 29, 35, 41, 47, 53, 58, 62, 66, 70, 74, 78, 81, 84, 87, 90, 93, 96, 99, 102, 104, 106, 108, 110, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 155, 156, 157, 161, 163, 165, 167, 168, 169, 170, 171, 174, 175, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 219,220, 221, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 264, 265, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303,304,307,308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350,351,353,354,355,356,357,358, 359, 361, 362]

temps_CELF_IC = 1232.234116077423

lookups = [0, 6, 1, 3, 1, 1, 7, 91, 10, 0, 0, 20, 2, 63, 23, 44, 6, 35, 0, 3, 17, 67, 2, 2, 0, 4, 1, 5, 2, 3, 2, 3, 1, 118, 16, 7, 17, 22, 6, 1, 4, 3, 7, 36, 64, 265, 8, 4, 0, 0, 8, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0,4, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 3, 0, 1, 3, 3, 0, 0, 1, 1, 1, 2, 1, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 1,1, 1, 0, 0, 0, 0, 7, 2, 21, 1, 0, 1, 3, 2, 3, 11, 0, 0, 0, 0, 3, 4, 0, 2, 0, 0, 1, 2, 0, 0, 10, 2, 1, 0, 0, 3, 0, 2, 1, 0, 0, 3, 0, 4, 6, 0, 0, 0, 0, 2, 0, 0, 4, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0,0, 0, 1]
#CELF sur Simmons, poids = 1/degre, k de 1 à 50, LT
influences_CELF_LT = [12.76, 21.944, 30.688, 35.016, 38.256, 45.792, 51.488, 55.384, 67.264, 72.624, 74.536, 76.568, 83.32, 88.016, 93.44, 99.552, 112.344, 115.872, 117.544, 121.344, 127.608, 134.096, 135.632, 137.936, 145.424, 146.888, 148.32, 155.856, 157.912, 161.056, 166.544, 169.448, 172.2, 175.648, 181.832, 184.096, 184.96, 186.776, 193.472, 194.608, 198.376, 201.744, 208.048, 209.648, 221.48, 223.072, 226.616, 234.368, 236.856, 244.248]
temps_CELF_LT = 4927.6006898880005

#CELF sur Simmons, p = 0.015, k de 1 à 50, IC
influences_CELF_IC_2 =[61, 90, 110, 133, 141, 149, 157, 165, 175, 183, 189, 193, 197, 201, 205, 209, 212, 215, 220, 223, 226, 229, 233, 236, 242, 245, 248, 251, 254, 257, 260, 262, 264, 266, 268, 270, 273, 
275, 277, 279, 281, 282, 283, 284, 287, 288, 290, 291, 292, 294]
k = [i for i in range(1, 51)]
plt.plot(k, influences_CELF_LT, 'red', label  = "Linear Threshold")
plt.plot(k, influences_CELF_IC[:50], 'blue', label = "Independent Cascade (p=0,01)")
plt.legend()
plt.show()
##
influences = [12.76, 21.944, 30.688, 35.016, 38.256, 45.792, 51.488, 55.384, 67.264, 72.624, 74.536, 76.568, 83.32, 88.016, 93.44, 99.552, 112.344, 115.872, 117.544, 121.344, 127.608, 134.096, 135.632, 137.936, 145.424, 146.888, 148.32, 155.856, 157.912, 161.056, 166.544, 169.448, 172.2, 175.648, 181.832, 184.096, 184.96, 186.776, 193.472, 194.608, 198.376, 201.744, 208.048, 209.648, 221.48, 223.072, 226.616, 234.368, 236.856, 244.248]
k = [i for i in range(1, 51)]
plt.plot(k, influences)
plt.show()

##
#Greedy sur Simmons, p = 0.01, k de 1 à 50, IC
temps_greedy = 29507

influences_greedy = [9, 17, 25, 30, 36, 41, 47, 52, 58, 62, 67, 70, 74, 78, 82, 85, 88, 92, 95, 98, 101, 104, 107, 109, 113, 116, 119, 121, 124, 127, 130, 132, 135, 136, 139, 141, 144, 146, 148, 150, 152, 154, 157, 158, 161, 163, 165, 168, 169, 171]
k = [i for i in range(1, 51)]

influences_CELF_IC = [9, 16, 23, 29, 35, 41, 47, 53, 58, 62, 66, 70, 74, 78, 81, 84, 87, 90, 93, 96, 99, 102, 104, 106, 108, 110, 113, 115, 117, 119, 121, 123, 125, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 155, 156, 157, 161, 163, 165, 167, 168, 169, 170, 171, 174, 175, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 219,220, 221, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 264, 265, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 288, 289, 291, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303,304,307,308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350,351,353,354,355,356,357,358, 359, 361, 362]

temps_CELF_IC = 1232.234116077423
plt.bar(0, temps_greedy/100, width = 10)
plt.bar(10, temps_CELF_IC/100, width = 10)
plt.legend()
plt.show()
##


#DegreeDiscount sur Simmons, p = 0.01, k de 1 à 200, IC
influences_discount = [7.955, 16.966, 22.446, 28.093, 32.803, 36.642, 40.754, 43.917, 47.769, 50.668, 
55.224, 57.733, 61.269, 63.677, 67.565, 69.739, 70.085, 73.937, 76.573, 79.455, 
82.553, 83.591, 85.598, 87.601, 90.658, 92.851, 95.601, 96.594, 98.133, 100.714,
102.556, 103.918, 106.467, 106.854, 109.208, 111.728, 112.049, 114.483, 116.009
, 119.728, 120.387, 121.951, 122.438, 124.765, 127.585, 128.038, 129.125, 132.347, 134.604, 133.764, 135.995, 139.019, 138.015, 140.293, 142.143, 141.864, 145.042, 146.502, 148.127, 149.579, 151.705, 152.246, 152.666, 154.481, 157.728, 157.165, 159.493, 160.673, 162.458, 163.176, 164.761, 166.774, 166.915, 168.447, 169.516, 171.664, 172.01, 174.048, 174.717, 177.063, 178.339, 179.273, 180.851, 180.863, 183.867, 183.524, 185.142, 186.003, 188.503, 189.53, 188.75, 191.67, 192.346, 193.846, 195.848, 195.218, 196.921, 199.237, 200.052, 201.292, 202.425, 203.632, 205.251, 206.464, 207.747, 207.211, 210.675, 210.605, 211.747, 213.246, 214.133, 215.332, 216.519, 217.568, 219.667, 220.6, 221.365, 222.661, 222.779, 223.521, 224.481, 226.43, 227.787, 230.014, 229.822, 230.485, 231.93, 232.855, 235.143, 235.949, 236.585, 238.098, 238.987, 239.818, 241.812, 241.274, 243.241, 243.438, 245.508, 244.965, 248.003, 248.823, 250.317, 250.068, 252.068, 253.202, 253.521, 254.786, 256.063, 257.374, 258.069, 258.812, 259.895, 261.842, 263.034, 263.09, 264.48, 265.783, 265.827, 267.645, 268.953, 270.977, 270.936, 272.108, 271.702, 274.026, 276.784, 276.987, 279.007, 282.34, 284.041, 285.37, 287.31, 288.951, 290.674, 292.189, 294.508, 294.63, 297.775, 299.456, 302.698, 302.477, 304.233, 305.868, 309.12, 309.624, 311.15, 311.519, 314.104, 316.695, 318.05, 317.989
, 320.882, 319.494, 323.23, 322.622, 325.669, 326.028, 326.44, 328.9]

#SingleDiscount sur Simmons, p = 0.01, k de 1 à 200, IC
influences_single = [7.97, 18.063, 22.487, 27.919, 31.95, 36.351, 41.097, 44.413, 47.401, 51.614, 54
.552, 57.278, 60.277, 63.693, 66.658, 69.553, 71.811, 74.313, 77.156, 79.042, 82
.21, 84.794, 85.553, 88.054, 90.887, 92.217, 95.003, 95.062, 98.301, 100.793, 10
2.323, 104.366, 105.537, 107.011, 108.964, 111.723, 114.452, 115.464, 116.532, 1
19.045, 119.027, 121.472, 124.157, 124.265, 127.971, 128.085, 128.909, 129.9, 13
2.577, 133.291, 135.914, 137.509, 138.708, 139.841, 142.297, 144.093, 145.761, 1
46.334, 147.729, 149.129, 150.291, 151.657, 153.646, 154.846, 158.115, 158.595, 
158.498, 161.104, 162.124, 163.877, 164.342, 165.944, 167.858, 168.828, 169.409,
 170.767, 172.259, 173.929, 174.258, 176.354, 177.616, 179.219, 179.789, 181.976
, 182.112, 185.237, 184.819, 185.687, 187.651, 189.241, 190.028, 192.06, 192.053
, 193.464, 195.403, 196.112, 196.502, 198.039, 199.756, 201.56, 202.79, 203.436,
 204.417, 206.468, 206.267, 208.054, 209.078, 211.095, 212.881, 213.808, 214.536
, 215.784, 217.899, 217.873, 218.163, 220.077, 221.166, 223.59, 223.031, 224.883
, 225.33, 227.874, 227.874, 228.377, 230.107, 231.005, 232.79, 233.934, 234.575,
 234.485, 235.942, 238.833, 238.401, 239.619, 240.271, 241.306, 243.892, 243.366
, 244.842, 245.339, 247.313, 247.366, 249.773, 250.483, 251.25, 253.136, 252.839
, 256.145, 255.095, 256.874, 259.246, 259.406, 261.383, 260.926, 261.737, 263.36
, 263.295, 266.204, 265.685, 267.603, 268.738, 269.688, 271.041, 271.542, 272.15
6, 273.855, 273.966, 274.657, 276.146, 278.915, 280.163, 280.403, 281.247, 281.8
27, 283.064, 284.357, 285.495, 285.844, 287.018, 289.361, 290.7, 290.138, 291.91
1, 292.418, 292.972, 295.179, 295.505, 297.301, 299.269, 300.431, 301.321, 303.0
05, 303.636, 304.324, 306.974, 307.175, 309.144, 309.866, 309.632, 311.744]

plt.plot(k, influences_CELF[:50], 'red', label  = "CELF")
plt.plot(k, influences_greedy, 'blue', label = "Glouton")
plt.plot(k, influences_discount[:50], 'green', label = "Degree Discount")
plt.legend()
plt.show()